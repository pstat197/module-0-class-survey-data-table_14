---
title: "Analysis of class surveys"
subtitle: "Part 1: Is self-reported statistics proficiency associated with the number of PSTAT courses completed?"
author: "Justin Zhou,Ella Yang,Lucy Cao,Cecilia Jiang,Janice Jiang,Wendy Zhu"
date: last-modified
published-title: "Updated"
editor: visual
format:
  pdf:
    toc: true
    number-sections: true
execute:
  message: false
  warning: false
  echo: false
  cache: true
---

```{r}
# load any other packages and read data here
library(tidyverse)
library(readr)
library(ggplot2)
library(knitr)
```

## Executive summary

We analyzed anonymized intake-survey responses from two sections to answer one question: **Is self-reported statistics proficiency associated with the number of PSTAT courses completed?** Using descriptive plots and a one-way ANOVA with Tukey’s post-hoc test (implemented in `Question_1.Rmd`), we find evidence of a statistically significant association: respondents reporting higher statistics proficiency have, on average, completed more PSTAT courses. Because the responses are a **sample** of offered-seat students, we emphasize clear visuals and center-focused summaries appropriate for modest (n).

## Data description

-   **How obtained.** Google Forms intake survey; exported and shared as two section files with identifiers removed plus a metadata file.\
-   **Sample.** Respondents from two course sections; treated as a **sample** from all offered-seat students (not necessarily a census).\
-   **Measurements.** Demographics; self-assessed **proficiency** and **comfort** (Likert 1–5); indicators for prior coursework; and project preferences. For Q1, we use `stat.prof` (statistics proficiency; ordered beginner → intermediate → advanced) and `pstat_courses_total` (sum of PSTAT course indicators per student).

## Question of interest

1.  **Q1.** Does self-reported statistics proficiency relate to the number of PSTAT courses completed?

## Findings (Q1)

**Question.** Is self-reported statistics proficiency associated with the number of PSTAT courses completed?

**What we did.** We summarized the distribution of proficiency levels (Beginner, Intermediate, Advanced) and compared total PSTAT coursework across groups using descriptive plots (composition chart, boxplot, and mean ± SD bar chart with a trend view). We then ran a one-way ANOVA and Tukey’s HSD post-hoc comparisons using the code in `results/Question_1.Rmd`.

### Proficiency composition

![Distribution of Students by Statistics Proficiency Level](Untitled/unnamed-chunk-3-1.png)

Most respondents did not record a proficiency level (NA is the largest slice). Among those who did, Advanced is more common than Intermediate, and Beginner is the smallest group. This matters for two reasons: (1) our comparisons are essentially between a larger Advanced group and smaller Intermediate/Beginner groups, and (2) inferential tests should exclude the NA category since it is missing-by-design.

### PSTAT courses by proficiency (boxplot)

![Number of PSTAT Courses by Proficiency Level](Untitled/unnamed-chunk-4-1.png)

The center and spread of completed PSTAT courses shift upward from Beginner -\> Intermediate -\> Advanced. Beginners cluster at the low end; Intermediate has a higher median with modest spread; Advanced shows both a higher median and a longer right tail (some students have many courses). The NA group appears at zero because proficiency was not reported; we do not use NA in tests. Overlapping IQRs are limited, which is consistent with a real difference in central tendency.

### Average PSTAT courses (mean ± SD)

![Average PSTAT Courses by Proficiency Level](Untitled/unnamed-chunk-5-1.png) Group means increase with proficiency: Beginners average the fewest PSTAT courses, Intermediate is higher, and Advanced is highest. Error bars (\$\pm\$1 SD) overlap somewhat between Intermediate and Advanced, suggesting those two groups are similar on average. This aligns with the Tukey HSD results: both Intermediate and Advanced differ from Beginners, while Intermediate and Advanced are not statistically different from each other.

### Average PSTAT courses (trend)

![Average PSTAT Courses by Proficiency Level (Trend)](Untitled/unnamed-chunk-6-1.png)

The trend line provides a compact view of the monotone relationship: more completed PSTAT courses are associated with higher self–reported proficiency. The drop to zero at NA reflects missing proficiency rather than a true value and should not be interpreted substantively. Overall, the trend corroborates the boxplot and mean $\pm$ SD views.

------------------------------------------------------------------------

### Inferential check (supports the visuals)

-   **One-way ANOVA:** p = 0.008 (alpha = 0.05) -\> mean PSTAT courses differ across proficiency groups.
-   **Tukey’s HSD pairwise comparisons:**
    -   Advanced vs Beginner: p = 0.0062 (significant)
    -   Intermediate vs Beginner: p = 0.033 (significant)
    -   Intermediate vs Advanced: p = 0.59 (not significant)

**Conclusion from tests:** The main differences are between **Beginners** and the other two groups; **Intermediate** and **Advanced** are not statistically different in this sample.

------------------------------------------------------------------------

### Important decisions (for reproducibility)

-   Constructed `pstat_courses_total` by summing the binary PSTAT course indicators per student.\
-   Treated `stat.prof` as an **ordered** factor with levels `beg < int < adv`.\
-   **NA** in `stat.prof` are shown in composition plots but excluded from ANOVA/Tukey.\
-   Emphasized **medians/IQRs** (boxplot) alongside means ± SD to avoid over-interpreting tails for modest sample sizes.

### Interpretation and scope

Within this sample of students offered a seat, **greater PSTAT coursework is associated with higher self-reported statistics proficiency**, especially when comparing **Beginners** to **Intermediate/Advanced**. Because this is a respondent sample with some item nonresponse, we treat results as **descriptive evidence** rather than a population claim.

**Possible extensions.** Report group counts and medians in the text; check robustness with a non-parametric Kruskal–Wallis test; examine whether particular PSTAT sequences (e.g., 120/122/126) align most with higher self-ratings.

## Findings (Q2)

**Question.**

How will the number of Computer Science courses that a student takes affects the students' programming proficiency?

**Overview** For this question, we investigate on whether the number of computer science (CS) courses a student has taken is associated with their self-reported programming proficiency level. The goal is to determine if greater exposure to CS coursework corresponds to higher programming skill levels, as measured by students’ proficiency categories (beginner, intermediate, advanced) in the survey dataset.

**Data and Methodology** We derived the variable cs_total, representing the total number of CS courses each student completed, by summing binary indicators for each course. In addition to core CS courses (e.g., CS 9, CS 16, CS 130), we also included PSTAT 100, 131, and 134, since these courses require programming in R and involve data manipulation, which contributes to programming experience. Programming proficiency was encoded numerically (1 = Beginner, 2 = Intermediate, 3 = Advanced) to facilitate regression and visualization. We then ran a simple linear regression model to evaluate the relationship between cs_total and prof.

### Proficiency composition

![Graph 1: Distribution of Number of CS Courses by Programming Proficiencyl](Untitled/Distribution%20of%20Number%20of%20CS%20Courses%20by%20Programming%20Proficiency.png) **Description** This boxplot displays the distribution of the total number of CS courses taken for each programming proficiency group (beginner, intermediate, advanced). The x-axis represents the number of CS courses taken, while the y-axis categorizes students by their self-reported proficiency.

**Interpretation:** From the graph, we can observe that:

**Advanced students (red)** tend to have taken more CS courses on average than intermediate or beginner students. Their interquartile range is higher, and their median is around 2–3 courses.

**Intermediate students (blue)** show a slightly lower median but also a wider spread, ranging from 1 to 5 courses, with a few outliers who have taken 6 or more.

**Beginners (green)** have taken very few or no CS courses, with their distribution concentrated near 0–1.

Overall, this pattern **supports the hypothesis that taking more CS courses generally corresponds to higher programming proficiency.** However, the overlap between intermediate and advanced groups suggests that coursework alone does not fully determine skill level—experience outside formal classes might also influence proficiency.

![Graph 2: Distribution of Number of CS Courses by Programming Proficiencyl](Untitled/Distribution%20of%20Programming%20Confidence%20by%20Programming%20Proficiency.png) **Description:** This bar chart shows how students’ self-reported confidence levels (1–5 scale) vary across different proficiency groups. Each bar indicates the count of students who selected a given confidence rating.

**Interpretation:** Students in the advanced group mostly report high confidence levels, typically 4 or 5, indicating consistency between their proficiency and self-assessment.

The intermediate group also shows a large cluster of high confidence scores (mostly 3–5), which suggests that many intermediate-level students also very comfortable with programming.

The beginner group is small, but its few members report lower confidence levels, typically 2–3, as expected.

**Overall Analysis:** The visualization shows that programming confidence generally increases with proficiency, but the relationship is not perfectly linear.

Advanced students show consistently high confidence, as expected.

Intermediate students’ confidence overlaps considerably with the advanced group, indicating subjectivity in self-perceived skill levels.

The variation also highlights that confidence does not always correspond directly to technical ability—students’ previous experiences (e.g., PSTAT courses, self-study, or non-CS exposure) may also shape how confident they feel when coding.

![Graph 3: Relationship Between Number of CS Courses and Programming Proficiency](Untitled/question_2_plot.png) **Description:** This scatterplot displays the relationship between the number of CS courses taken (x-axis) and students’ self-reported programming proficiency (y-axis, coded as 1 = Beginner, 2 = Intermediate, 3 = Advanced). Each dot represents one student, color-coded by proficiency group—red for beginners, blue for intermediates, and green for advanced. The black dashed line shows the fitted linear regression trend from the model: Proficiency=β0 + β1(Number of CS Courses) + ϵ

**Interpretation:** The plot shows a positive upward trend, suggesting that students who have taken more CS courses tend to report higher programming proficiency levels.

1.Trendline:

The dashed regression line slopes upward, indicating a positive coefficient for cs_total.

This means that, on average, each additional CS course is associated with a higher proficiency score.

2.Group Distribution:

Advanced students (green) cluster toward the upper part of the plot (proficiency ≈ 3) and typically have taken multiple CS courses, ranging roughly from 2 to 6.

Intermediate students (blue) form the majority and are spread across the middle range of CS course counts (1–4). Their distribution is relatively flat, reflecting that many have moderate experience regardless of exact course count.

Beginners (red) are few and positioned near the lower left—indicating both low proficiency and minimal course exposure.

3.Overlap & Variability:

Although the general trend supports a positive relationship, there is overlap between intermediate and advanced levels. For instance, some students with 3–4 CS courses still identify as intermediate, while a few advanced students have taken only 1–2.

This overlap suggests that while formal coursework contributes strongly to skill development, other learning pathways (e.g., self-study, statistics programming, or project experience) can also elevate proficiency.

**Conclusion:** This visualization reinforces the finding that coursework exposure is positively associated with programming proficiency, but not deterministically so. The modest slope of the regression line and the visible group overlap imply that programming ability is multifaceted—it reflects not only classroom experience but also self-learning, cross-disciplinary training (e.g., PSTAT courses), and students’ personal engagement with coding practice.

## Work distribution

Our group divided the tasks based on individual focus areas to ensure an efficient and balanced workflow.

Ella & Cecilia: Analyzed the relationship between the number of PSTAT courses taken and students’ statistical proficiency. They cleaned the dataset, computed the total number of PSTAT courses per student, and visualized the corresponding proficiency distributions.

Janice & Wendy: Investigated how the number of CS courses taken affects students’ programming proficiency. They generated summary statistics, developed regression and visualization models (including boxplots and scatterplots), and interpreted the results.

Lucy & Justin: Edited the final report, ensuring consistency in format, clarity, and interpretation. They also wrote the executive summary and refined the overall discussion to connect the two sub-questions into a cohesive conclusion.
